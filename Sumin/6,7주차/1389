from collections import deque
# N 유저 수, M 친구관계 수
N, M = map(int, input().split(' '))
#최소값 구하기
kebin = [0]*(N+1)
#유저 수만큼 그래프 만들기
graph = [[] for _ in range(N+1)]
#그래프 안에 넣어주기
for _ in range(M):
    a,b = map(int, input().split(' '))
    graph[a].append(b)
    graph[b].append(a)


#전부 거리 수를 계산해 봐야 해
for i in range(1, N+1):
  distance = [-1] * (N+1)
  distance[i] = 0

  queue = deque([i])
  while queue:
    now = queue.popleft()
    for next in graph[now]:
      if distance[next] == -1:
        distance[next] = distance[now] + 1
        queue.append(next)
  for j in range(1, N+1):
    if i != j:
      kebin[i] +=distance[j]
kebin[0] = max(kebin)
for i in range(1, N+1):
  if kebin[i] == min(kebin):
    print(i)
    break
