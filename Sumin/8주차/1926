from collections import deque

n, m= map(int, input().split())
graph = []
for i in range(n):
    graph.append(list(map(int, input().split())))

#bfs 구현하기
dx = [-1,1,0,0]
dy = [0,0,1,-1]
def bfs(x,y):
    q = deque()
    q.append((x,y))
    graph[x][y] = 0
    count = 1
    while q:
        x, y = q.popleft()
        for i in range(4):
            nx = dx[i]+x
            ny = dy[i]+y
            if nx < 0 or ny < 0 or nx >= n or ny >=m:
                continue
            if graph[nx][ny] == 1:
                count +=1
                graph[nx][ny] = 0
                q.append((nx,ny))
    return count
paint = []
for i in range(n):
    for j in range(m):
        if graph[i][j] == 1:
            paint.append(bfs(i, j))

if len(paint) == 0:
    print(len(paint))
    print(0)
else:
    print(len(paint))
    print(max(paint))
